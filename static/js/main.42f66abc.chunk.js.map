{"version":3,"sources":["app/ui/ui.action.tsx","config.ts","config.pro.ts","config.dev.ts","config.loc.ts","app/ui/ui.reducer.tsx","app/reducers.tsx","app/store.ts","services/index.tsx","services/hotels/hotels.service.tsx","services/hotels/api.services.tsx","components/FormValidator.tsx","components/SearchHotel.tsx","utils/Constants.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","config","process","REACT_APP_STAGE","webbeds_external","DEV","VERSION","UIActions","type","LOADING","payload","LOADING_CLEAR","error","message","ALERT_ERROR","initialState","showLoading","showMessage","combineReducers","uiReducer","state","action","ALERT_CLEAR","loggerMiddleware","createLogger","store","createStore","reducers","applyMiddleware","thunk","hotelService","URL","this","dispatch","setLoading","result","noLoading","clearLoading","data","filter","a","onInit","axios","post","then","onFinish","catch","onFinishError","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","width","margin","FormValidator","props","classes","onSubmit","children","onReset","className","SearchHotel","useForm","handleSubmit","control","register","setValue","onSearch","onChangeP","search","submitDisabled","checkNumber","value","test","handleChange","Grid","container","destinationId","nights","style","item","xs","md","name","defaultValue","render","field","onChange","fieldState","TextField","autoComplete","helperText","placeholder","label","event","target","variant","rules","required","alignContent","Button","color","disabled","Constants","RATE_TYPE","perNight","App","React","useState","hotelRates","setHotelRates","hotelSearch","setHotelSearch","btnSubmitDisabled","setBtnSubmitDisabled","Container","parseInt","response","e","Divider","map","hr","i","hotel","propertyID","geoId","rating","rates","r","Fragment","rateType","boardType","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.42f66abc.chunk.js","sourcesContent":["export enum ActionTypes {\r\n    LOADING = \"LOADING\",\r\n    LOADING_CLEAR = \"LOADING_CLEAR\",\r\n    ALERT_ERROR = \"ALERT_ERROR\",\r\n    ALERT_CLEAR = \"ALERT_CLEAR\",\r\n  }\r\n\r\n  interface AlertErrorAction {\r\n    type: ActionTypes.ALERT_ERROR;\r\n    payload: any;\r\n  }\r\n\r\n  interface AlertClearAction {\r\n    type: ActionTypes.ALERT_CLEAR;\r\n    payload: any;\r\n  }\r\n  \r\n  interface LoadingAction {\r\n    type: ActionTypes.LOADING;\r\n  }\r\n  interface LoadingClearAction {\r\n    type: ActionTypes.LOADING_CLEAR;\r\n  }\r\n\r\n\r\n  \r\n  export type Actions = LoadingAction | LoadingClearAction | AlertErrorAction | AlertClearAction;\r\n  \r\n  const loading = () => {\r\n    return { type: ActionTypes.LOADING, payload: \"\" };\r\n  };\r\n  \r\n  const loadingClear = () => {\r\n    return { type: ActionTypes.LOADING_CLEAR, payload: \"\" };\r\n  };\r\n\r\n  const alertError = (error: any): Actions => {\r\n    let message = \"\"; \r\n    if (typeof error === 'string'){\r\n      message = error;\r\n    } else if(error.message){\r\n      message = error.message;\r\n    } \r\n    return { type: ActionTypes.ALERT_ERROR, payload: message };\r\n  };\r\n\r\n  const alertClear = () => {\r\n    return { type: ActionTypes.ALERT_CLEAR };\r\n  };\r\n  \r\n  export const UIActions = {\r\n    loading,\r\n    loadingClear,\r\n    alertError,\r\n    alertClear\r\n  };\r\n  ","import loc from './config.loc'; \r\nimport dev from './config.dev';\r\nimport prod from './config.pro'; \r\n\r\n\r\nconst config = process.env.REACT_APP_STAGE === 'PRO' ? prod : (process.env.REACT_APP_STAGE === 'DEV' ? dev : loc);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    ...config,    \r\n    VERSION:\"v 0.060409\" // mm/dd/hh\r\n};","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    webbeds_external:\"https://web-beds-api.herokuapp.com/\",\r\n    DEV:false\r\n};","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {    \r\n    webbeds_external:\"https://localhost:44379/\",\r\n    DEV:true\r\n};\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {    \r\n    webbeds_external:\"https://web-beds-api.herokuapp.com/\",    \r\n    DEV:false\r\n};","import { Actions, ActionTypes } from \"./ui.action\";\r\n\r\nexport interface UIState {\r\n  message: string;\r\n  showLoading: boolean;\r\n  showMessage: boolean;\r\n  type?: \"success\" | \"info\" | \"warning\" | \"error\";\r\n}\r\n\r\nconst initialState = {\r\n  showLoading: false,\r\n  showMessage: false,\r\n  message: \"\",\r\n};\r\n\r\nexport const uiReducer = (state: UIState = initialState, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOADING:\r\n      return {\r\n        ...state,\r\n        showLoading: true,\r\n      };\r\n    case ActionTypes.LOADING_CLEAR:\r\n      return {\r\n        ...state,\r\n        showLoading: false,\r\n      };\r\n      case ActionTypes.ALERT_ERROR:\r\n      return {\r\n        ...state,\r\n        type: \"error\",\r\n        message: action.payload,\r\n        showMessage: true,\r\n      };\r\n    case ActionTypes.ALERT_CLEAR:\r\n      return {\r\n        ...state,\r\n        showMessage: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./ui/ui.reducer\";\r\n\r\nexport default combineReducers({\r\n  uiReducer,\r\n});\r\n","import { createStore, applyMiddleware} from 'redux';\nimport thunk from \"redux-thunk\";\nimport { createLogger } from 'redux-logger';\nimport reducers from './reducers'\nimport config from '../config';\n\nconst loggerMiddleware = createLogger()\n\nexport const store = config.DEV \n    ? createStore(reducers,applyMiddleware(thunk, loggerMiddleware))\n    : createStore(reducers,applyMiddleware(thunk))\n\n","import HotelService from './hotels/hotels.service';\r\n\r\nexport const hotelService = new HotelService();","import config from '../../config';\r\nimport { HotelRates } from '../../interfaces/HotelRates';\r\nimport ApiServices from './api.services';\r\n\r\nexport default class HotelService extends ApiServices<HotelRates>{\r\n    URL: string;\r\n    constructor(){\r\n        super();\r\n        this.URL = config.webbeds_external + 'Hotels';\r\n    }\r\n\r\n}","import axios from \"axios\";\r\nimport { store } from \"../../app/store\";\r\nimport { UIActions } from \"../../app/ui/ui.action\";\r\nimport config from \"../../config\";\r\n\r\nexport default class ApiServices<T> {\r\n  URL: string;\r\n\r\n  constructor() {\r\n    this.URL = config.webbeds_external;\r\n  }\r\n\r\n  setLoading() {\r\n    store.dispatch(UIActions.loading());\r\n  }\r\n\r\n  clearLoading() {\r\n    store.dispatch(UIActions.loadingClear());\r\n  }\r\n\r\n  onInit() {\r\n    this.setLoading();\r\n  }\r\n\r\n  onFinish(result: any, noLoading?: boolean) {\r\n    if (!noLoading) {\r\n      this.clearLoading();\r\n    }\r\n    return result.data;\r\n  }\r\n\r\n  onFinishError(error: any, noLoading?: boolean) {\r\n    if (!noLoading) {\r\n      this.clearLoading();\r\n    }\r\n    store.dispatch(UIActions.alertError(error));\r\n    throw error;\r\n  }\r\n\r\n  async search(filter: any) {    \r\n    this.onInit();\r\n    return axios\r\n      .post<T>(`${this.URL}/search`, filter)\r\n      .then((result) => {\r\n        return this.onFinish(result);\r\n      })\r\n      .catch((error) => {\r\n        return this.onFinishError(error);\r\n      });\r\n  }\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      // width: \"300px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface FormValidatorProps {\r\n  children: React.ReactNode;\r\n  onSubmit: () => void;\r\n  onReset?: () => void;\r\n}\r\n\r\nconst FormValidator = (props: FormValidatorProps) => {\r\n  const classes = useStyles();\r\n\r\n  const { onSubmit, children, onReset } = props;\r\n\r\n  return (\r\n    \r\n      <form className={classes.root} onSubmit={onSubmit} onReset={onReset}>\r\n        {children}\r\n      </form>\r\n    \r\n  );\r\n};\r\n\r\nexport default FormValidator;\r\n","import { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ISearchHotel } from \"../interfaces/ISearchHotel\";\r\nimport FormValidator from \"./FormValidator\";\r\n\r\ninterface SearchHotelProps {\r\n  onSearch: (formData: any) => void;\r\n  onChangeP: (search: ISearchHotel) => void;\r\n  search: ISearchHotel;\r\n  submitDisabled: boolean;\r\n}\r\n\r\nconst SearchHotel = (props: SearchHotelProps) => {\r\n  const { handleSubmit, control, register, setValue } = useForm();\r\n\r\n  const { onSearch, onChangeP, search, submitDisabled } = props;\r\n\r\n  const onSubmit = (data: any): void => {    \r\n    onSearch(data);\r\n  };\r\n\r\n  const handleReset = (): void => {\r\n    onChangeP({\r\n      destinationId: \"\",\r\n      nights: \"\",\r\n    });\r\n    setValue(\"destinationID\", \"\");\r\n    setValue(\"nights\", \"\");\r\n  };\r\n\r\n  /**\r\n   * Validacion de caracter introducido en inputs\r\n   * \r\n   */\r\n  const checkNumber = (value: string): boolean => {\r\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(value);\r\n  };\r\n\r\n  const handleChange = (data: any, value: any): void => {\r\n    onChangeP(data);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <FormValidator onSubmit={handleSubmit(onSubmit)} onReset={handleReset}>\r\n        <Grid container style={{justifyContent: 'center'}}>\r\n          <Grid item xs={12} md={3}>\r\n            <Controller            \r\n              name=\"destinationId\"\r\n              control={control}\r\n              defaultValue={\"\"}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  {...register(\"destinationID\")}\r\n                  style={{width: '95%'}}                  \r\n                  autoComplete='number'\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  placeholder=\"0\"\r\n                  label=\"Destination ID\"\r\n                  onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                    checkNumber(event.target.value) || event.target.value === \"\"\r\n                      ? handleChange(\r\n                          { ...search, destinationId: event.target.value },\r\n                          onChange(event.target.value)\r\n                        )\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  value={search.destinationId}\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n              rules={{ required: \"Destination ID required\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Controller\r\n              {...register(\"nights\")}\r\n              name=\"nights\"\r\n              control={control}\r\n              defaultValue={\"\"}\r\n              render={({ field: { onChange }, fieldState: { error } }) => (\r\n                <TextField\r\n                style={{width: '95%'}}               \r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  placeholder=\"0\"\r\n                  label=\"Nights\"\r\n                  onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                    checkNumber(event.target.value) || event.target.value === \"\"\r\n                      ? handleChange(\r\n                          { ...search, nights: event.target.value },\r\n                          onChange(event.target.value)\r\n                        )\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  value={search.nights}\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n              rules={{ required: \"Number of nights required\" }}\r\n            />\r\n          </Grid>        \r\n          <Grid item xs={6} md={1} alignContent='flex-start'>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={submitDisabled}>\r\n              Search\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} md={1} alignContent='flex-end'>\r\n            <Button type=\"reset\" variant=\"contained\" color=\"secondary\">\r\n              RESET\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </FormValidator>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchHotel;\r\n","export class Constants {\r\n    static RATE_TYPE = {\r\n        perNight: 'PerNight',\r\n    }\r\n}","import Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport { hotelService } from \"./services\";\nimport \"./App.css\";\nimport SearchHotel from \"./components/SearchHotel\";\nimport { HotelRates } from \"./interfaces/HotelRates\";\nimport { ISearchHotel } from \"./interfaces/ISearchHotel\";\nimport { Rate } from \"./interfaces/Rate\";\nimport { Constants } from \"./utils/Constants\";\nimport { Divider, Grid } from \"@material-ui/core\";\n\nfunction App() {\n  const [hotelRates, setHotelRates] = React.useState<HotelRates[]>([]);\n  const [hotelSearch, setHotelSearch] = React.useState<ISearchHotel>({\n    destinationId: \"\",\n    nights: \"\",\n  });\n  const [btnSubmitDisabled, setBtnSubmitDisabled] =\n    React.useState<boolean>(false);\n\n  const onChangeSearch = (search: ISearchHotel) => {\n    setHotelSearch(search);\n  };\n\n  const onSearch = (data: ISearchHotel) => {\n    setBtnSubmitDisabled(true);\n    setHotelSearch(data);\n    setHotelRates([]);\n\n    data.destinationId &&\n      hotelService\n        .search({\n          destinationId: parseInt(data.destinationId),\n        })\n        .then((response: HotelRates[]) => {\n          setHotelRates(response);\n          setBtnSubmitDisabled(false);\n        })\n        .catch((e: any) => {\n          setBtnSubmitDisabled(false);\n        });\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <SearchHotel\n          onSearch={onSearch}\n          onChangeP={onChangeSearch}\n          search={hotelSearch}\n          submitDisabled={btnSubmitDisabled}\n        />\n        <Grid container>\n          <Grid item md={4}>\n            <h2>\n              <b>Hotel</b>\n            </h2>\n          </Grid>\n          <Grid item md={8}>\n            <h2>\n              <b>Rates</b>\n            </h2>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item md={4}></Grid>\n          <Grid item md={2}>\n            <h3> Rate Type</h3>\n          </Grid>\n          <Grid item md={2}>\n            <h3> Board Type</h3>\n          </Grid>\n          <Grid item md={2}>\n            <h3>Value</h3>\n          </Grid>\n          <Grid item md={2}>\n            <h3>Final Price</h3>\n          </Grid>\n\n          {hotelRates\n            ? hotelRates?.map((hr: HotelRates, i: number) => {\n                return (\n                  <>\n                    <Grid item md={4} key={\"H\" + i}>\n                      <p>Property Id: {hr.hotel?.propertyID}</p>\n                      <p>Name: {hr.hotel?.name}</p>\n                      <p>Geo ID: {hr.hotel?.geoId}</p>\n                      <p>Rating: {hr.hotel?.rating}</p>\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                    {hr.rates?.map((r: Rate, i: number) => {\n                      return (\n                        <React.Fragment key={\"R\" + hr.hotel.propertyID + i}>\n                          <Grid container>                            \n                            <Grid item md={3}>\n                              {r.rateType}\n                            </Grid>\n                            <Grid item md={3}>\n                              {r.boardType}\n                            </Grid>\n                            <Grid item md={3}>\n                              {r.value}\n                            </Grid>\n                            <Grid item md={2}>\n                              {r.rateType === Constants.RATE_TYPE.perNight &&\n                              hotelSearch.nights\n                                ? r.value * parseInt(hotelSearch.nights)\n                                : r.value}\n                            </Grid>\n                            <Grid item xs={12}> \n                              <Divider\n                                style={{\n                                  padding: \"10px\",\n                                  backgroundColor: \"white\",\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </React.Fragment>\n                      );\n                    })}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Divider\n                        style={{ padding: \"10px\", backgroundColor: \"white\" }}\n                      />\n                    </Grid>\n                  </>\n                );\n              })\n            : \"No results\"}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '../public/fonts/Roboto-Regular.ttf';\nimport './styles/index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}